{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2023-12-10T15:30:35.498Z",
    "end": "2023-12-10T15:30:49.839Z",
    "duration": 14341,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "973ec380-aeb7-48e4-ac95-1c7a97bbd021",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8c320ce9-c899-4c6a-a5f7-c08f4d52f7eb",
          "title": "add another todo tests",
          "fullFile": "D:\\Selenium_Vs\\SP_2\\sampleMocha2.js",
          "file": "\\sampleMocha2.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "sucessfully adds another todo to application",
              "fullTitle": "add another todo tests sucessfully adds another todo to application",
              "timedOut": null,
              "duration": 10266,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//launch the browser\nlet driver = await new Builder().forBrowser(\"chrome\").build();\n//navigate to our application\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//add  a todo\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Selenium\", Key.RETURN);\n//assert\nlet todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function (value) {\n    // we use .getText.then(function) with return, that value and store that in todoText \n    return value\n});\n//assert using chai should\ntodoText.should.equal(\"Selenium\");\nawait driver.sleep(5000);\n//close the browser\nawait driver.quit();",
              "err": {},
              "uuid": "93394d71-5054-4af5-89f8-b7aba82ed4e5",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "93394d71-5054-4af5-89f8-b7aba82ed4e5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10266,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "f510f84e-fbff-4417-8b01-893f5e770c29",
          "title": "add todo tests",
          "fullFile": "D:\\Selenium_Vs\\SP_2\\sampleMocha.js",
          "file": "\\sampleMocha.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "sucessfully adds a todo to application",
              "fullTitle": "add todo tests sucessfully adds a todo to application",
              "timedOut": null,
              "duration": 10334,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//launch the browser\nlet driver = await new Builder().forBrowser(\"chrome\").build();\n//navigate to our application\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//add  a todo\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Selenium\", Key.RETURN);\n//assert\nlet todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function (value) {\n    // we use .getText.then(function) with return, that value and store that in todoText \n    return value\n});\n//assert using chai should\ntodoText.should.equal(\"Selenium\");\nawait driver.sleep(5000);\n//close the browser\nawait driver.quit();",
              "err": {},
              "uuid": "3f18a124-2676-4ff0-94ac-8c3549dc2c3b",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3f18a124-2676-4ff0-94ac-8c3549dc2c3b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10334,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}